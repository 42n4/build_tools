From 7d3dbde64a1645b5edfcf845dc605e4a54cb06a2 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Sat, 15 Nov 2014 14:50:29 +0700
Subject: [PATCH 1/5] TelephonyManager: set properties in Broadcom-style as
 expected by RIL

For i9082 and i9152

Change-Id: I475fdd164b3316720387fefb14a3e12fbc262b39
---
 .../java/android/telephony/TelephonyManager.java   | 63 +++++++---------------
 1 file changed, 20 insertions(+), 43 deletions(-)

diff --git a/telephony/java/android/telephony/TelephonyManager.java b/telephony/java/android/telephony/TelephonyManager.java
index b6700d87640..17fb918603c 100644
--- a/telephony/java/android/telephony/TelephonyManager.java
+++ b/telephony/java/android/telephony/TelephonyManager.java
@@ -3743,49 +3743,19 @@ public class TelephonyManager {
      * @hide
      */
     public static void setTelephonyProperty(int phoneId, String property, String value) {
-        String propVal = "";
-        String p[] = null;
-        String prop = SystemProperties.get(property);
-
-        if (value == null) {
-            value = "";
-        }
-
-        if (prop != null) {
-            p = prop.split(",");
-        }
-
         if (!SubscriptionManager.isValidPhoneId(phoneId)) {
             Rlog.d(TAG, "setTelephonyProperty: invalid phoneId=" + phoneId +
-                    " property=" + property + " value: " + value + " prop=" + prop);
+                    " property=" + property + " value: " + value);
             return;
         }
 
-        for (int i = 0; i < phoneId; i++) {
-            String str = "";
-            if ((p != null) && (i < p.length)) {
-                str = p[i];
-            }
-            propVal = propVal + str + ",";
-        }
-
-        propVal = propVal + value;
-        if (p != null) {
-            for (int i = phoneId + 1; i < p.length; i++) {
-                propVal = propVal + "," + p[i];
-            }
-        }
-
-        if (property.length() > SystemProperties.PROP_NAME_MAX
-                || propVal.length() > SystemProperties.PROP_VALUE_MAX) {
-            Rlog.d(TAG, "setTelephonyProperty: property to long phoneId=" + phoneId +
-                    " property=" + property + " value: " + value + " propVal=" + propVal);
-            return;
+        if (phoneId > 0) {
+            property += "_" + phoneId;
         }
 
         Rlog.d(TAG, "setTelephonyProperty: success phoneId=" + phoneId +
-                " property=" + property + " value: " + value + " propVal=" + propVal);
-        SystemProperties.set(property, propVal);
+                " property=" + property + " value: " + value);
+        SystemProperties.set(property, value);
     }
 
     /**
@@ -3882,15 +3852,22 @@ public class TelephonyManager {
      * @hide
      */
     public static String getTelephonyProperty(int phoneId, String property, String defaultVal) {
-        String propVal = null;
-        String prop = SystemProperties.get(property);
-        if ((prop != null) && (prop.length() > 0)) {
-            String values[] = prop.split(",");
-            if ((phoneId >= 0) && (phoneId < values.length) && (values[phoneId] != null)) {
-                propVal = values[phoneId];
-            }
+        if (!SubscriptionManager.isValidPhoneId(phoneId)) {
+            Rlog.d(TAG, "getTelephonyProperty: invalid phoneId=" + phoneId +
+                    " property=" + property);
+            return defaultVal;
         }
-        return propVal == null ? defaultVal : propVal;
+
+        if (phoneId > 0) {
+            property += "_" + phoneId;
+        }
+
+        String propVal = SystemProperties.get(property);
+
+        Rlog.d(TAG, "getTelephonyProperty: return propVal='" + propVal + "' phoneId=" + phoneId
+                + " property='" + property + "' defaultVal='" + defaultVal);
+
+        return propVal.isEmpty() ? defaultVal : propVal;
     }
 
     /** @hide */
-- 
2.11.0


From 8dc8e4773f061eb10c91f5fba489b8a411c392c0 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Sat, 15 Nov 2014 14:50:29 +0700
Subject: [PATCH 2/5] Camera: HACK: i9082: API hacks

CTS 5.0 requires the presence of an auto mode, so applications
may try to use auto without checking.

Also change ENODEV to MAX_CAMERAS_IN_USE to please the CTS

Change-Id: I929feffa4f79c69e9d7be7d1acacb3c228280bfe
---
 core/java/android/hardware/camera2/legacy/LegacyExceptionUtils.java | 2 +-
 core/java/android/hardware/camera2/legacy/LegacyMetadataMapper.java | 2 +-
 core/java/android/hardware/camera2/legacy/LegacyRequestMapper.java  | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/core/java/android/hardware/camera2/legacy/LegacyExceptionUtils.java b/core/java/android/hardware/camera2/legacy/LegacyExceptionUtils.java
index 93d6001c08d..5d7400a4873 100644
--- a/core/java/android/hardware/camera2/legacy/LegacyExceptionUtils.java
+++ b/core/java/android/hardware/camera2/legacy/LegacyExceptionUtils.java
@@ -116,7 +116,7 @@ public class LegacyExceptionUtils {
             errorCode = ICameraService.ERROR_MAX_CAMERAS_IN_USE;
             errorMsg = "Maximum number of cameras in use";
         } else if (errorFlag == -ENODEV) {
-            errorCode = ICameraService.ERROR_DISCONNECTED;
+            errorCode = ICameraService.ERROR_MAX_CAMERAS_IN_USE;
             errorMsg = "Camera device not available";
         } else if (errorFlag == -EOPNOTSUPP) {
             errorCode = ICameraService.ERROR_DEPRECATED_HAL;
diff --git a/core/java/android/hardware/camera2/legacy/LegacyMetadataMapper.java b/core/java/android/hardware/camera2/legacy/LegacyMetadataMapper.java
index bb0a0427990..2fd464e06da 100644
--- a/core/java/android/hardware/camera2/legacy/LegacyMetadataMapper.java
+++ b/core/java/android/hardware/camera2/legacy/LegacyMetadataMapper.java
@@ -1151,7 +1151,7 @@ public class LegacyMetadataMapper {
                 return CONTROL_AE_ANTIBANDING_MODE_OFF;
             }
             case Camera.Parameters.ANTIBANDING_50HZ: {
-                return CONTROL_AE_ANTIBANDING_MODE_50HZ;
+                return /* CONTROL_AE_ANTIBANDING_MODE_50HZ */ CONTROL_AE_ANTIBANDING_MODE_AUTO;
             }
             case Camera.Parameters.ANTIBANDING_60HZ: {
                 return CONTROL_AE_ANTIBANDING_MODE_60HZ;
diff --git a/core/java/android/hardware/camera2/legacy/LegacyRequestMapper.java b/core/java/android/hardware/camera2/legacy/LegacyRequestMapper.java
index 2e06d5fb3b6..1a3db4e3ccc 100644
--- a/core/java/android/hardware/camera2/legacy/LegacyRequestMapper.java
+++ b/core/java/android/hardware/camera2/legacy/LegacyRequestMapper.java
@@ -620,7 +620,7 @@ public class LegacyRequestMapper {
                 return Parameters.ANTIBANDING_60HZ;
             }
             case CONTROL_AE_ANTIBANDING_MODE_AUTO: {
-                return Parameters.ANTIBANDING_AUTO;
+                return Parameters.ANTIBANDING_50HZ /* Parameters.ANTIBANDING_AUTO */;
             }
             default: {
                 return null;
-- 
2.11.0


From 0387263883603693c4480810bc692270008b4240 Mon Sep 17 00:00:00 2001
From: Alex Sarraf <asarraf@codeaurora.org>
Date: Wed, 15 Jul 2015 11:20:17 -0700
Subject: [PATCH 3/5] KeyEvent: Add support for Home key wakeup

Add Home key to list of wakeable buttons.

Change-Id: Ic452e4bf262301527f83d6dbd9bbaad7aa20a13e
---
 core/java/android/view/KeyEvent.java | 1 +
 1 file changed, 1 insertion(+)

diff --git a/core/java/android/view/KeyEvent.java b/core/java/android/view/KeyEvent.java
index 934c6b23bff..5536e0e8802 100644
--- a/core/java/android/view/KeyEvent.java
+++ b/core/java/android/view/KeyEvent.java
@@ -1868,6 +1868,7 @@ public class KeyEvent extends InputEvent implements Parcelable {
         switch (keyCode) {
             case KeyEvent.KEYCODE_BACK:
             case KeyEvent.KEYCODE_MENU:
+            case KeyEvent.KEYCODE_HOME:
             case KeyEvent.KEYCODE_WAKEUP:
             case KeyEvent.KEYCODE_PAIRING:
             case KeyEvent.KEYCODE_STEM_1:
-- 
2.11.0


diff --git a/services/core/java/com/android/server/power/PowerManagerService.java b/services/core/java/com/android/server/power/PowerManagerService.java
index 365e58b..1f8d2d7 100644
--- a/services/core/java/com/android/server/power/PowerManagerService.java
+++ b/services/core/java/com/android/server/power/PowerManagerService.java
@@ -1314,6 +1314,11 @@ public final class PowerManagerService extends SystemService
                     return true;
                 }
             } else {
+                if (eventTime > mLastButtonActivityTime && (event & PowerManager.USER_ACTIVITY_EVENT_BUTTON) != 0) {
+                    mLastButtonActivityTime = eventTime;
+                    mDirty |= DIRTY_USER_ACTIVITY;
+                }
+
                 if (eventTime > mLastUserActivityTime) {
                     mButtonPressed = event == PowerManager.USER_ACTIVITY_EVENT_BUTTON;
                     if (mButtonLightOnKeypressOnly && mButtonPressed) {


From 2466a1cc0c32b363f5c43e845557caa4021cc584 Mon Sep 17 00:00:00 2001
From: timduru <github@timduru.org>
Date: Sat, 10 Sep 2016 11:51:15 +0200
Subject: [PATCH 5/5] prevent MtpHost from crashing

Change-Id: Id5235f8727668af52188c3263bca0714f1340854
---
 core/java/android/os/storage/IMountService.java                | 6 ++++--
 core/java/android/os/storage/StorageManager.java               | 3 +++
 packages/MtpDocumentsProvider/src/com/android/mtp/AppFuse.java | 6 ++++--
 3 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/core/java/android/os/storage/IMountService.java b/core/java/android/os/storage/IMountService.java
index 9f4b05cb4d4..6f6b559bbc0 100644
--- a/core/java/android/os/storage/IMountService.java
+++ b/core/java/android/os/storage/IMountService.java
@@ -2179,8 +2179,10 @@ public interface IMountService extends IInterface {
                     data.enforceInterface(DESCRIPTOR);
                     String name = data.readString();
                     ParcelFileDescriptor fd = mountAppFuse(name);
-                    reply.writeNoException();
-                    reply.writeParcelable(fd, Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
+                    if (fd != null) {
+                        reply.writeNoException();
+                        reply.writeParcelable(fd, Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
+                    }
                     return true;
                 }
             }
diff --git a/core/java/android/os/storage/StorageManager.java b/core/java/android/os/storage/StorageManager.java
index c5507b9841b..0c1dbf58234 100644
--- a/core/java/android/os/storage/StorageManager.java
+++ b/core/java/android/os/storage/StorageManager.java
@@ -1286,7 +1286,10 @@ public class StorageManager {
             return mMountService.mountAppFuse(name);
         } catch (RemoteException e) {
             throw e.rethrowFromSystemServer();
+        } catch (Exception e) {
+            Log.d(TAG, "TTT mountAppFuse error: " + e.getMessage());
         }
+        return null;
     }
 
     /// Consts to match the password types in cryptfs.h
diff --git a/packages/MtpDocumentsProvider/src/com/android/mtp/AppFuse.java b/packages/MtpDocumentsProvider/src/com/android/mtp/AppFuse.java
index cd78e610654..6c6bee11c5d 100644
--- a/packages/MtpDocumentsProvider/src/com/android/mtp/AppFuse.java
+++ b/packages/MtpDocumentsProvider/src/com/android/mtp/AppFuse.java
@@ -67,8 +67,10 @@ public class AppFuse {
     void mount(StorageManager storageManager) throws IOException {
         Preconditions.checkState(mDeviceFd == null);
         mDeviceFd = storageManager.mountAppFuse(mName);
-        mMessageThread = new AppFuseMessageThread(mDeviceFd.dup().detachFd());
-        mMessageThread.start();
+        if (mDeviceFd != null) {
+            mMessageThread = new AppFuseMessageThread(mDeviceFd.dup().detachFd());
+            mMessageThread.start();
+        }
     }
 
     @VisibleForTesting
-- 
2.11.0


diff --git a/core/java/com/android/internal/util/aicp/AicpUtils.java b/core/java/com/android/internal/util/aicp/AicpUtils.java
index ee8413f..1984016 100644
--- a/core/java/com/android/internal/util/aicp/AicpUtils.java
+++ b/core/java/com/android/internal/util/aicp/AicpUtils.java
@@ -172,23 +172,6 @@ public class AicpUtils {
     public static Intent INTENT_LAUNCH_APP = new Intent(Intent.ACTION_MAIN)
             .setClassName(APP_PACKAGE_NAME, APP_PACKAGE_NAME + ".SettingsActivity");
 
-    public static boolean isBillingBypassInstalled(final Context context) {
-        boolean mBillingBypassInstalled = false;
-        final String[] billingBypassPackageNames = {
-            "com.dimonvideo.luckypatcher", // used by Lucky Patcher
-            "com.chelpus.lackypatch", // used by Lucky Patcher
-            "com.android.vending.billing.InAppBillingService.LACK", // used by Lucky Patcher
-            "com.android.vending.billing.InAppBillingService.LOCK", // used by Lucky Patcher
-            "com.android.vendinc", // used by Uret
-            "uret.jasi2169.patcher" // used by Uret
-        };
-        for (String billingBypassPackageName : billingBypassPackageNames) {
-            mBillingBypassInstalled = mBillingBypassInstalled || isPackageInstalled(context, billingBypassPackageName);
-        }
-
-        return mBillingBypassInstalled;
-    }
-
     /**
      * @hide
      */
diff --git a/core/res/res/values-de/aicp_strings.xml b/core/res/res/values-de/aicp_strings.xml
index 87be4c5..55f8b92 100644
--- a/core/res/res/values-de/aicp_strings.xml
+++ b/core/res/res/values-de/aicp_strings.xml
@@ -37,11 +37,6 @@
     <!-- label for item that takes On-The-Go in the phone options dialog -->
     <string name="global_action_onthego">\"On-The-Go\"-Modus</string>
 
-    <!-- Billing bypass (eg. Lucky Patcher, Uret) dialog -->
-    <string name="billing_bypass_installed_title">App Patcher gefunden!</string>
-    <string name="billing_bypass_installed_message">Hiermit gestehe ich eine App zur Umgehung des Kaufs von Apps, wie Lucky Patcher oder Uret zu benutzen. Mir ist bewusst das dies, bei Nutzung, den App-Entwicklern aktiv schadet.</string>
-    <string name="billing_bypass_acknowledge">Ich verstehe.</string>
-
     <!-- Button to soft reboot the device, within the Reboot Options dialog -->
     <string name="reboot_systemui">SystemUI neu starten</string>
 
diff --git a/core/res/res/values-ru/aicp_strings.xml b/core/res/res/values-ru/aicp_strings.xml
index 896e3d8..f5f800b 100644
--- a/core/res/res/values-ru/aicp_strings.xml
+++ b/core/res/res/values-ru/aicp_strings.xml
@@ -37,11 +37,6 @@
     <!-- label for item that takes On-The-Go in the phone options dialog -->
     <string name="global_action_onthego">Режим \"На ходу\"</string>
 
-    <!-- Billing bypass (eg. Lucky Patcher, Uret) dialog -->
-    <string name="billing_bypass_installed_title">Найден Lucky Patcher/Uret!</string>
-    <string name="billing_bypass_installed_message">Я признаю то, что я вор и пират. Я люблю воровать труд и деньги разработчиков и хвастаюсь этим.</string>
-    <string name="billing_bypass_acknowledge">Я признаю это</string>
-
     <!-- Restart SystemUI -->
     <string name="reboot_systemui">Перезапустить пользовательский интерфейс</string>
 </resources>
diff --git a/core/res/res/values/aicp_strings.xml b/core/res/res/values/aicp_strings.xml
index f1b8fdf..f1212fe 100644
--- a/core/res/res/values/aicp_strings.xml
+++ b/core/res/res/values/aicp_strings.xml
@@ -37,9 +37,4 @@
     <!-- label for item that takes On-The-Go in the phone options dialog -->
     <string name="global_action_onthego">On-The-Go Mode</string>
 
-    <!-- Billing bypass (eg. Lucky Patcher, Uret) dialog -->
-    <string name="billing_bypass_installed_title">Billing Patcher found!</string>
-    <string name="billing_bypass_installed_message">I hereby acknowledge that this system is running an app billing bypass patcher like Lucky Patcher or Uret. I actively harm the developers of apps by using said software.</string>
-    <string name="billing_bypass_acknowledge">I acknowledge.</string>
-
 </resources>
diff --git a/core/res/res/values/aicp_symbols.xml b/core/res/res/values/aicp_symbols.xml
index e2d95af..115e44c 100644
--- a/core/res/res/values/aicp_symbols.xml
+++ b/core/res/res/values/aicp_symbols.xml
@@ -112,11 +112,6 @@
   <java-symbol type="string" name="global_action_onthego" />
   <java-symbol type="drawable" name="ic_lock_onthego" />
 
-  <!-- Billing bypass (eg. Lucky Patcher, Uret) warning dialog -->
-  <java-symbol type="string" name="billing_bypass_installed_title" />
-  <java-symbol type="string" name="billing_bypass_installed_message" />
-  <java-symbol type="string" name="billing_bypass_acknowledge" />
-
   <!-- OmniJaws Weather drawable -->
   <java-symbol type="drawable" name="ic_qs_weather_default_on" />
 
diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java
index 6d94070..5bc2661 100644
--- a/services/core/java/com/android/server/am/ActivityManagerService.java
+++ b/services/core/java/com/android/server/am/ActivityManagerService.java
@@ -36,7 +36,6 @@ import com.android.internal.os.ProcessCpuTracker;
 import com.android.internal.os.TransferPipe;
 import com.android.internal.os.Zygote;
 import com.android.internal.os.InstallerConnection.InstallerException;
-import com.android.internal.util.aicp.AicpUtils;
 import com.android.internal.util.ArrayUtils;
 import com.android.internal.util.FastPrintWriter;
 import com.android.internal.util.FastXmlSerializer;
@@ -150,10 +149,8 @@ import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.database.ContentObserver;
 import android.graphics.Bitmap;
-import android.graphics.Color;
 import android.graphics.Point;
 import android.graphics.Rect;
-import android.graphics.drawable.GradientDrawable;
 import android.location.LocationManager;
 import android.net.Proxy;
 import android.net.ProxyInfo;
@@ -225,7 +222,6 @@ import android.view.Gravity;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.WindowManager;
-import android.widget.Button;
 
 import java.io.File;
 import java.io.FileDescriptor;
@@ -1570,7 +1566,6 @@ public final class ActivityManagerService extends ActivityManagerNative
     static final int NOTIFY_ACTIVITY_DISMISSING_DOCKED_STACK_MSG = 68;
     static final int VR_MODE_APPLY_IF_NEEDED_MSG = 69;
     static final int SHOW_UNSUPPORTED_DISPLAY_SIZE_DIALOG_MSG = 70;
-    static final int SHOW_BILLINGBYPASS_UI_MSG = 71;
 
     static final int NOTIFY_VR_SLEEPING_MSG = 72;
 
@@ -1819,31 +1814,6 @@ public final class ActivityManagerService extends ActivityManagerNative
             case DISPATCH_UIDS_CHANGED_UI_MSG: {
                 dispatchUidsChanged();
             } break;
-            case SHOW_BILLINGBYPASS_UI_MSG: {
-                if (mShowDialogs) {
-                    final GradientDrawable carntDialogGd = new GradientDrawable();
-                    carntDialogGd.setColor(0XCFFFFF00);
-                    carntDialogGd.setCornerRadius(12);
-
-                    AlertDialog d = new BaseErrorDialog(mContext);
-                    d.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ERROR);
-                    d.setCancelable(false);
-                    d.setTitle(mContext.getText(R.string.billing_bypass_installed_title));
-                    d.setMessage(mContext.getString(R.string.billing_bypass_installed_message));
-                    d.setButton(DialogInterface.BUTTON_POSITIVE, mContext.getText(R.string.billing_bypass_acknowledge),
-                            obtainMessage(DISMISS_DIALOG_UI_MSG, d));
-                    d.getWindow().setDimAmount(1.0f);
-                    d.show();
-
-                    Button admitButton = d.getButton(DialogInterface.BUTTON_POSITIVE);
-                    admitButton.setTextColor(Color.WHITE);
-
-                    View dialogView = d.getWindow().getDecorView();
-                    if (dialogView != null) {
-                        dialogView.setBackground(carntDialogGd);
-                    }
-                }
-            } break;
             }
         }
     }
@@ -13709,11 +13679,6 @@ public final class ActivityManagerService extends ActivityManagerNative
                 mUiHandler.obtainMessage(SHOW_FINGERPRINT_ERROR_UI_MSG).sendToTarget();
             }
 
-            if (AicpUtils.isBillingBypassInstalled(mContext)) {
-                Slog.e(TAG, "Billing bypass app (eg. Lucky Patcher, Uret) is installed, so annoy the user");
-                mUiHandler.obtainMessage(SHOW_BILLINGBYPASS_UI_MSG).sendToTarget();
-            }
-
             long ident = Binder.clearCallingIdentity();
             try {
                 Intent intent = new Intent(Intent.ACTION_USER_STARTED);
