From 777b02489be91ee28d91bfe432b555128a094d0c Mon Sep 17 00:00:00 2001
From: Arne Coucheron <arco68@gmail.com>
Date: Wed, 3 Dec 2014 06:14:55 +0100
Subject: [PATCH 1/5] libutils: Properly #ifdef NEEDS_VECTORIMPL_SYMBOLS

 * Compile error might occur otherwise

Change-Id: I982e5f72ea4e84594e415394cceed44f90045526
---
 include/utils/VectorImpl.h | 4 ++--
 libutils/VectorImpl.cpp    | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/include/utils/VectorImpl.h b/include/utils/VectorImpl.h
index cab95be..88c3a05 100644
--- a/include/utils/VectorImpl.h
+++ b/include/utils/VectorImpl.h
@@ -106,7 +106,7 @@ protected:
     virtual void            do_move_forward(void* dest, const void* from, size_t num) const = 0;
     virtual void            do_move_backward(void* dest, const void* from, size_t num) const = 0;
 
-#if NEEDS_VECTORIMPL_SYMBOLS
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
     // take care of FBC...
     virtual void            reservedVectorImpl1();
     virtual void            reservedVectorImpl2();
@@ -168,7 +168,7 @@ public:
 protected:
     virtual int             do_compare(const void* lhs, const void* rhs) const = 0;
 
-#if NEEDS_VECTORIMPL_SYMBOLS
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
     // take care of FBC...
     virtual void            reservedSortedVectorImpl1();
     virtual void            reservedSortedVectorImpl2();
diff --git a/libutils/VectorImpl.cpp b/libutils/VectorImpl.cpp
index 6d4e601..ffd552b 100644
--- a/libutils/VectorImpl.cpp
+++ b/libutils/VectorImpl.cpp
@@ -552,7 +552,7 @@ void VectorImpl::_do_move_backward(void* dest, const void* from, size_t num) con
     do_move_backward(dest, from, num);
 }
 
-#if NEEDS_VECTORIMPL_SYMBOLS
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
 void VectorImpl::reservedVectorImpl1() { }
 void VectorImpl::reservedVectorImpl2() { }
 void VectorImpl::reservedVectorImpl3() { }
@@ -678,7 +678,7 @@ ssize_t SortedVectorImpl::remove(const void* item)
     return i;
 }
 
-#if NEEDS_VECTORIMPL_SYMBOLS
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
 void SortedVectorImpl::reservedSortedVectorImpl1() { };
 void SortedVectorImpl::reservedSortedVectorImpl2() { };
 void SortedVectorImpl::reservedSortedVectorImpl3() { };
-- 
2.8.3


From 2669b1bf4e77e0d622d4362d9a074f59987e4c93 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Sat, 17 Dec 2011 17:26:54 -0500
Subject: [PATCH 2/5] init: add detection of charging mode

Based on Prashant Somashekar's patch which is in turn based on techomancer's
patch http://goo.gl/I19GG.

When BOARD_CHARGING_MODE_BOOTING_LPM is set, init will read that
value (usually from /sys) and enable charging mode when set to 1.

This differs from the original patch in that Samsung-specific lpm.rc
is not loaded, but instead, init.rc is loaded using the "charger" class,
which is how AOSP devices handle charging.

The change is because the either the SELinux or the init.rc changes is
causing lpm.rc to not work, and porting lpm.rc to the Android system
is easier than trying to fix it.

Change-Id: Ice7a074da7e982f9a64aaa97de28bfcbccdc8b91

Conflicts:
	init/init.c
---
 init/Android.mk |  8 ++++++++
 init/init.cpp   | 21 ++++++++++++++++++++-
 2 files changed, 28 insertions(+), 1 deletion(-)

diff --git a/init/Android.mk b/init/Android.mk
index eb2543a..e7e0d82 100755
--- a/init/Android.mk
+++ b/init/Android.mk
@@ -50,6 +50,14 @@ LOCAL_SRC_FILES:= \
     vendor_init.c \
     watchdogd.cpp \
 
+SYSTEM_CORE_INIT_DEFINES := BOARD_CHARGING_MODE_BOOTING_LPM
+
+$(foreach system_core_init_define,$(SYSTEM_CORE_INIT_DEFINES), \
+  $(if $($(system_core_init_define)), \
+    $(eval LOCAL_CFLAGS += -D$(system_core_init_define)=\"$($(system_core_init_define))\") \
+  ) \
+)
+
 LOCAL_MODULE:= init
 LOCAL_C_INCLUDES += \
     system/extras/ext4_utils \
diff --git a/init/init.cpp b/init/init.cpp
index b332588..7ec27e7 100644
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -990,6 +990,24 @@ static void selinux_initialize(bool in_kernel_domain) {
     }
 }
 
+static int charging_mode_booting(void) {
+#ifndef BOARD_CHARGING_MODE_BOOTING_LPM
+    return 0;
+#else
+    int f;
+    char cmb;
+    f = open(BOARD_CHARGING_MODE_BOOTING_LPM, O_RDONLY);
+    if (f < 0)
+        return 0;
+
+    if (1 != read(f, (void *)&cmb,1))
+        return 0;
+
+    close(f);
+    return ('1' == cmb);
+#endif
+}
+
 int main(int argc, char** argv) {
     if (!strcmp(basename(argv[0]), "ueventd")) {
         return ueventd_main(argc, argv);
@@ -1101,7 +1119,8 @@ int main(int argc, char** argv) {
 
     // Don't mount filesystems or start core system services in charger mode.
     char bootmode[PROP_VALUE_MAX];
-    if (property_get("ro.bootmode", bootmode) > 0 && strcmp(bootmode, "charger") == 0) {
+    if ((property_get("ro.bootmode", bootmode) > 0 && strcmp(bootmode, "charger") == 0)
+            || charging_mode_booting()) {
         action_for_each_trigger("charger", action_add_queue_tail);
     } else {
         action_for_each_trigger("late-init", action_add_queue_tail);
-- 
2.8.3


From 92c7cbc99a3956359708ff8f646ef786d56b7e65 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Fri, 12 Apr 2013 11:40:15 +0700
Subject: [PATCH 3/5] libnetutils: add ifc_set_mtu

Change-Id: I3031e9ee38583648350f2c46baa7a9a714b9ea1e
---
 libnetutils/ifc_utils.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/libnetutils/ifc_utils.c b/libnetutils/ifc_utils.c
index 7d2a5fb..e2be134 100644
--- a/libnetutils/ifc_utils.c
+++ b/libnetutils/ifc_utils.c
@@ -701,3 +701,19 @@ ifc_configure(const char *ifname,
 
     return 0;
 }
+
+// Required for Broadcom RILD
+int ifc_set_mtu(const char *name, int mtuSz)
+{
+    struct ifreq ifr;
+    int ret;
+    ifc_init_ifr(name, &ifr);
+    ifr.ifr_mtu = mtuSz;
+
+    ret = ioctl(ifc_ctl_sock, SIOCSIFMTU, &ifr);
+    if (ret < 0) {
+        printerr("ifc_set_mtu: SIOCSIFMTU failed: %d\n", ret);
+    }
+
+    return ret;
+}
-- 
2.8.3


From 31de65cb8d2296a96ef75136f544a007a57e93ec Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Tue, 18 Nov 2014 22:36:32 +0700
Subject: [PATCH 4/5] charger: allow home button to wake

A squashed commit of the following:

commit 6ce21d726a967b2cc942476758b9ab3851ff39f1
Author: Pawit Pornkitprasan <p.pawit@gmail.com>
Date:   Sun Feb 3 22:21:32 2013 +0700

    charger: do not suspend when handling home

    When using Google's suspend implementation, home press should also wake
    the device from suspend

    Change-Id: I51f3e45c5cb418b0b3718e7223a1336876379043

commit 75a7cf84df719d8cf5cd77093b3f9fee3c09017e
Author: Pawit Pornkitprasan <p.pawit@gmail.com>
Date:   Sat Jul 21 22:09:37 2012 +0700

    charger: allow home button to wake

    On certain devices (e.g. galaxysmtd), the user expects the physical
    home button to be able to wake the device as well as the power button.

    Change-Id: If764f36aba3810dfa5233af8baf0a740b04889e0

Change-Id: I362b227e26bc864a2cad471df799bce2d682ecee
---
 healthd/healthd_mode_charger.cpp | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/healthd/healthd_mode_charger.cpp b/healthd/healthd_mode_charger.cpp
index 6fffe15..b46a3af 100644
--- a/healthd/healthd_mode_charger.cpp
+++ b/healthd/healthd_mode_charger.cpp
@@ -727,6 +727,11 @@ static void process_key(struct charger *charger, int code, int64_t now)
                 }
             }
         }
+    } else {
+        if (key->pending) {
+            request_suspend(false);
+            kick_animation(charger->batt_anim);
+        }
     }
 
     key->pending = false;
@@ -735,6 +740,7 @@ static void process_key(struct charger *charger, int code, int64_t now)
 static void handle_input_state(struct charger *charger, int64_t now)
 {
     process_key(charger, KEY_POWER, now);
+    process_key(charger, KEY_HOME, now);
 
     if (charger->next_key_check != -1 && now > charger->next_key_check)
         charger->next_key_check = -1;
-- 
2.8.3


From 3588bfe40d05ac3b3ca5b21f8a012f668f4e0de5 Mon Sep 17 00:00:00 2001
From: ChampionSwimmer <android@championswimmer.tk>
Date: Tue, 5 Mar 2013 00:36:05 +0530
Subject: [PATCH 5/5] mkbootimg: Support 32K 64K and 128K pagesizes

Signed-off-by: ChampionSwimmer <android@championswimmer.tk>
Signed-off-by: Michael Bestas <mikeioannina@gmail.com>

Change-Id: I0ee608b74a1daefe536b9247f99368f3e043f93d
---
 mkbootimg/mkbootimg.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/mkbootimg/mkbootimg.c b/mkbootimg/mkbootimg.c
index f954213..dddf22c 100644
--- a/mkbootimg/mkbootimg.c
+++ b/mkbootimg/mkbootimg.c
@@ -75,7 +75,7 @@ int usage(void)
 
 
 
-static unsigned char padding[16384] = { 0, };
+static unsigned char padding[131072] = { 0, };
 
 static void print_id(const uint8_t *id, size_t id_len) {
     printf("0x");
@@ -170,7 +170,9 @@ int main(int argc, char **argv)
             } else if(!strcmp(arg,"--pagesize")) {
                 pagesize = strtoul(val, 0, 10);
                 if ((pagesize != 2048) && (pagesize != 4096)
-                    && (pagesize != 8192) && (pagesize != 16384)) {
+                    && (pagesize != 8192) && (pagesize != 16384)
+                    && (pagesize != 32768) && (pagesize != 65536)
+                    && (pagesize != 131072)) {
                     fprintf(stderr,"error: unsupported page size %d\n", pagesize);
                     return -1;
                 }
-- 
2.8.3

