From c29b659f001685ab593cf942d3e34aeb1f63461f Mon Sep 17 00:00:00 2001
From: andixlm <andixev@gmail.com>
Date: Tue, 10 Feb 2015 23:26:49 +0500
Subject: [PATCH] Revert "development: Add setting for updating recovery"

This reverts commit cc4418b1dc16fb7cae19262f2b332444dd935f6a.
---
 res/values/cm_strings.xml                         |  6 ---
 res/xml/development_prefs.xml                     |  5 --
 src/com/android/settings/DevelopmentSettings.java | 60 -----------------------
 3 files changed, 71 deletions(-)

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 9e52c26..ecd19ed 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -269,12 +269,6 @@
     <!-- CM Updater -->
     <string name="cmupdate_settings_title">CyanogenMod updates</string>
 
-    <!-- Settings switch for updating Cyanogen recovery -->
-    <string name="update_recovery_title">Update Cyanogen recovery</string>
-    <string name="update_recovery_summary">Update recovery with system updates</string>
-    <string name="update_recovery_on_warning">NOTICE: When this feature is enabled, your installed recovery will be replaced by one included with the current version of the running OS.\n\nYour recovery will be updated along with upgrades to your system, helping to ensure compatibility with future versions.\n\nWould you like to enable this feature?</string>
-    <string name="update_recovery_off_warning">WARNING: When this feature is disabled, your installed recovery will not be updated with OS upgrades.\n\nFuture OS updates may not install with outdated or custom recovery versions.\n\nDo you really want to disable this feature?</string>
-
     <!-- About phone screen, CyanogenMod version -->
     <string name="mod_version">CyanogenMod version</string>
     <string name="mod_version_default">Unknown</string>
diff --git a/res/xml/development_prefs.xml b/res/xml/development_prefs.xml
index 7bd573b..074313a 100644
--- a/res/xml/development_prefs.xml
+++ b/res/xml/development_prefs.xml
@@ -88,11 +88,6 @@
         android:entries="@array/root_access_entries"
         android:entryValues="@array/root_access_values" />
 
-    <SwitchPreference
-        android:key="update_recovery"
-        android:title="@string/update_recovery_title"
-        android:summary="@string/update_recovery_summary" />
-
     <PreferenceCategory android:key="debug_debugging_category"
             android:title="@string/debug_debugging_category">
 
diff --git a/src/com/android/settings/DevelopmentSettings.java b/src/com/android/settings/DevelopmentSettings.java
index 1ca16a3..13294a1 100644
--- a/src/com/android/settings/DevelopmentSettings.java
+++ b/src/com/android/settings/DevelopmentSettings.java
@@ -114,7 +114,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
     private static final String BUGREPORT = "bugreport";
     private static final String BUGREPORT_IN_POWER_KEY = "bugreport_in_power";
     private static final String OPENGL_TRACES_PROPERTY = "debug.egl.trace";
-    private static final String UPDATE_RECOVERY_PROPERTY = "persist.sys.recovery_update";
 
     private static final String DEBUG_APP_KEY = "debug_app";
     private static final String WAIT_FOR_DEBUGGER_KEY = "wait_for_debugger";
@@ -152,7 +151,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
     private static final String SELECT_LOGD_SIZE_KEY = "select_logd_size";
     private static final String SELECT_LOGD_SIZE_PROPERTY = "persist.logd.size";
     private static final String SELECT_LOGD_DEFAULT_SIZE_PROPERTY = "ro.logd.size";
-    private static final String UPDATE_RECOVERY_KEY = "update_recovery";
 
     private static final String OPENGL_TRACES_KEY = "enable_opengl_traces";
 
@@ -263,8 +261,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
 
     private SwitchPreference mAdvancedReboot;
 
-    private SwitchPreference mUpdateRecovery;
-
     private SwitchPreference mDevelopmentShortcut;
 
     private final ArrayList<Preference> mAllPrefs = new ArrayList<Preference>();
@@ -281,7 +277,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
     private Dialog mAdbKeysDialog;
     private boolean mUnavailable;
     private Dialog mRootDialog;
-    private Dialog mUpdateRecoveryDialog;
 
     @Override
     public void onCreate(Bundle icicle) {
@@ -341,7 +336,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
         mPassword = (PreferenceScreen) findPreference(LOCAL_BACKUP_PASSWORD);
         mAllPrefs.add(mPassword);
         mAdvancedReboot = findAndInitSwitchPref(ADVANCED_REBOOT_KEY);
-        mUpdateRecovery = findAndInitSwitchPref(UPDATE_RECOVERY_KEY);
         mDevelopmentShortcut = findAndInitSwitchPref(DEVELOPMENT_SHORTCUT_KEY);
 
 
@@ -351,7 +345,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
             disableForUser(mEnableTerminal);
             disableForUser(mPassword);
             disableForUser(mAdvancedReboot);
-            disableForUser(mUpdateRecovery);
             disableForUser(mDevelopmentShortcut);
             disableForUser(mQuickBoot);
         }
@@ -637,7 +630,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
         updateRootAccessOptions();
         updateAdvancedRebootOptions();
         updateDevelopmentShortcutOptions();
-        updateUpdateRecoveryOptions();
     }
 
     private void writeAdvancedRebootOptions() {
@@ -711,7 +703,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
         resetVerifyAppsOverUsbOptions();
         resetDevelopmentShortcutOptions();
         resetUseNuplayerOptions();
-        resetUpdateRecoveryOptions();
         writeAnimationScaleOption(0, mWindowAnimationScale, null);
         writeAnimationScaleOption(1, mTransitionAnimationScale, null);
         writeAnimationScaleOption(2, mAnimatorDurationScale, null);
@@ -1498,24 +1489,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
             getActivity().getContentResolver(), Settings.Secure.ANR_SHOW_BACKGROUND, 0) != 0);
     }
 
-    private void updateUpdateRecoveryOptions() {
-        updateSwitch(mUpdateRecovery, SystemProperties.getBoolean(UPDATE_RECOVERY_PROPERTY,
-                false));
-    }
-
-    private void writeUpdateRecoveryOptions() {
-        SystemProperties.set(UPDATE_RECOVERY_PROPERTY,
-                mUpdateRecovery.isChecked() ? "true" : "false");
-        pokeSystemProperties();
-    }
-
-    private void resetUpdateRecoveryOptions() {
-        // User builds should update recovery by default
-        if ("user".equals(Build.TYPE)) {
-            SystemProperties.set(UPDATE_RECOVERY_PROPERTY, "true");
-        }
-    }
-
     @Override
     public void onSwitchChanged(Switch switchView, boolean isChecked) {
         if (switchView != mSwitchBar.getSwitch()) {
@@ -1698,28 +1671,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
             writeDevelopmentShortcutOptions();
         } else if (preference == mKillAppLongpressBack) {
             writeKillAppLongpressBackOptions();
-        } else if (preference == mUpdateRecovery) {
-            if (mSwitchBar.isChecked()) {
-                if (mUpdateRecoveryDialog != null) {
-                    dismissDialogs();
-                }
-                if (mUpdateRecovery.isChecked()) {
-                    mUpdateRecoveryDialog = new AlertDialog.Builder(getActivity()).setMessage(
-                            getResources().getString(R.string.update_recovery_on_warning))
-                            .setTitle(R.string.update_recovery_title)
-                            .setPositiveButton(android.R.string.yes, this)
-                            .setNegativeButton(android.R.string.no, this)
-                            .show();
-                } else {
-                    mUpdateRecoveryDialog = new AlertDialog.Builder(getActivity()).setMessage(
-                            getResources().getString(R.string.update_recovery_off_warning))
-                            .setTitle(R.string.update_recovery_title)
-                            .setPositiveButton(android.R.string.yes, this)
-                            .setNegativeButton(android.R.string.no, this)
-                            .show();
-                }
-                mUpdateRecoveryDialog.setOnDismissListener(this);
-            }
         } else {
             return super.onPreferenceTreeClick(preferenceScreen, preference);
         }
@@ -1810,10 +1761,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
             mRootDialog.dismiss();
             mRootDialog = null;
         }
-        if (mUpdateRecoveryDialog != null) {
-            mUpdateRecoveryDialog.dismiss();
-            mUpdateRecoveryDialog = null;
-        }
     }
 
     public void onClick(DialogInterface dialog, int which) {
@@ -1863,10 +1810,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
                 // Reset the option
                 writeRootAccessOptions("0");
             }
-        } else if (dialog == mUpdateRecoveryDialog) {
-            if (which == DialogInterface.BUTTON_POSITIVE) {
-                writeUpdateRecoveryOptions();
-            }
         }
     }
 
@@ -1885,9 +1828,6 @@ public class DevelopmentSettings extends SettingsPreferenceFragment
                 mSwitchBar.setChecked(false);
             }
             mEnableDialog = null;
-        } else if (dialog == mUpdateRecoveryDialog) {
-            updateUpdateRecoveryOptions();
-            mUpdateRecoveryDialog = null;
         }
     }
 
-- 
2.1.4

