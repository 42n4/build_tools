#!/bin/bash

cd ..

export USE_CCACHE=1

# Check 1st option
case "$1" in
	--i9105 )
		DEVICE=i9105
		FAST=1
		;;
	--i9105p )
		DEVICE=i9105p
		FAST=1
		;;
	--both )
		BOTH=1
		DEVICE=i9105,i9105p
		FAST=1
		;;
	"" )
		;;
	* )
		echo Unknown 1st option: $1
		exit 0
		;;
esac

# If 1st option is used, check 2nd option
if [[ -n $FAST ]]; then
	case "$2" in
		--mb )
			MB=1
			;;
		--mr )
			MR=1
			;;
		--mc )
			MC=1
			;;
		"" )
			;;
		* )
			echo Unknown 2nd option: $2
			exit 0
	esac
fi

# Fast building if options used
if [[ $FAST ]]; then

	# Clean if needed
	if [[ $MC ]]; then
		make clean
	fi

	# Build for only device
	if [[ -z $BOTH ]]; then
		. build/envsetup.sh
		brunch $DEVICE

	# Build for both devices
	else
		for NAME in $DEVICE; do
			. build/envsetup.sh
			brunch $NAME
		done
	fi

# Make boot image
elif [[ $MB ]]; then

	# Make it for only device
	if [[ -z $BOTH ]]; then
		. build/envsetup.sh
		breakfast $DEVICE
		mka bootimage

	# Make it for both devices
	else
		for NAME in $DEVICE; do
			. build/envsetup.sh
			breakfast $NAME
			mka bootimage
		done
	fi

# Make recovery image
elif [[ $MR ]]; then

	# Make it for only device
	if [[ -z $BOTH ]]; then
		. build/envsetup.sh
		breakfast $DEVICE
		mka recoveryimage

	# Make it for both devices
	else
		for NAME in $DEVICE; do
			. build/envsetup.sh
			breakfast $NAME
			mka recoveryimage
		done
	fi
fi

# Normal building if no options used
if [[ -z $FAST ]]; then
	echo -n 'Make it clean? (y/N): '
	read CLEAN
	# Clean if needed
	if [[ $CLEAN ]]; then
		make clean
	fi

	echo -n 'Device? (i9105 or i9105p): '
	read DEVICE
	# Check if given proper device name
	if [[ $DEVICE != i9105 && $DEVICE != i9105p ]]; then
		echo Unknown device name: $DEVICE
		exit 0
	fi

	. build/envsetup.sh
	brunch $DEVICE
fi
